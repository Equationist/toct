; Generated by CompilerKit
; Target: 64-bit

.section __TEXT,__text,regular,pure_instructions

.globl _main
.p2align 2
_main:
.cfi_startproc
	str x29, [sp, #-16]!	; save FP and LR with pre-decrement
	str x30, [sp, #8]
	mov x29, sp	; set up frame pointer
	sub sp, sp, #64	; allocate 64 bytes
entry:
	mov w0, #15	; load constant 15
	mov w1, #6	; load constant 6
	and w2, w0, w1	; bitwise and
	orr w3, w0, w1	; bitwise or
	eor w4, w0, w1	; bitwise xor
	mov w5, #2	; load constant 2
	lsl w6, w1, w5	; logical shift left
	mov w7, #2	; load constant 2
	asr w8, w0, w7	; arithmetic shift right
	orr w9, w2, w6	; bitwise or
	eor w10, w9, w8	; bitwise xor
	mov w0, w10	; return value
	mov sp, x29	; restore stack pointer
	ldr x29, [sp], #16	; restore FP and LR with post-increment
	ldr x30, [sp, #-8]
	ret	; return
.cfi_endproc
