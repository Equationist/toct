; Generated by CompilerKit
; Target: 64-bit

.section __TEXT,__text,regular,pure_instructions

.globl _main
.p2align 2
_main:
.cfi_startproc
	str x29, [sp, #-16]!	; save FP and LR with pre-decrement
	str x30, [sp, #8]
	mov x29, sp	; set up frame pointer
	sub sp, sp, #64	; allocate 64 bytes
entry:
	mov w0, #10	; load constant 10
	mov w1, #3	; load constant 3
	sub w2, w0, w1	; subtract
	mul w3, w0, w1	; multiply
	sdiv w4, w0, w1	; signed divide
	sdiv w6, w0, w1	; signed divide for rem
	mul w6, w6, w1	; multiply quotient by divisor
	sub w5, w0, w6	; remainder = dividend - quotient*divisor
	sub w7, w3, w4	; subtract
	add w8, w7, w5	; add
	mov w0, w8	; return value
	mov sp, x29	; restore stack pointer
	ldr x29, [sp], #16	; restore FP and LR with post-increment
	ldr x30, [sp, #-8]
	ret	; return
.cfi_endproc
