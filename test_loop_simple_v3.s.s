; Generated by CompilerKit
; Target: 64-bit

.section __TEXT,__text,regular,pure_instructions

.globl _main
.p2align 2
_main:
.cfi_startproc
	str x29, [sp, #-16]!	; save FP and LR with pre-decrement
	str x30, [sp, #8]
	mov x29, sp	; set up frame pointer
	sub sp, sp, #64	; allocate 64 bytes
.Lmain_entry:
	mov w0, wzr	; load zero
	mov w1, #1	; load constant 1
	mov w0, w1	; arg 0 for block L0
	b .LL0	; unconditional jump
.LL0:
	mov w1, #5	; load constant 5
	cmp w3, w1	; compare
	cset x2, le	; conditional set
	tst x2, x2	; test condition
	b.ne .LL1	; branch if true
	b .LL2	; branch if false
.LL1:
	add w0, w2, w1	; add
	mov w3, #1	; load constant 1
	add w4, w1, w3	; add
	mov w0, w4	; arg 0 for block L0
	b .LL0	; unconditional jump
.LL2:
	mov sp, x29	; restore stack pointer
	ldr x29, [sp], #16	; restore FP and LR with post-increment
	ldr x30, [sp, #-8]
	ret	; return
.cfi_endproc
